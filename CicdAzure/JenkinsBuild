#!/usr/bin/env groovy
properties([
        parameters([
                string(
                        defaultValue: '',
                        description: '''The release version. eg 1.0.0. Artifacts will be released with this version''',
                        name: 'ReleaseVersion'),
                string(
                        defaultValue: '',
                        description: '''The next development version. eg 1.0.1
        The version in the pom file will be updated with ${nextDevelopmentVersion}-SNAPSHOT
        ''',
                        name: 'NextDevelopmentVersion'),
                string(
                        defaultValue: '',
                        description: 'change cause',
                        name: 'ChangeCause')
        ]),
        buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '20', numToKeepStr: '20')),
        pipelineTriggers([])
])

def label = "release-5f0b5e0e-b875-4549-ae61-442d5b546bfa"


podTemplate(containers: [
        containerTemplate(name: 'maven', image: 'maven:3.8.1-jdk-8', command: 'sleep', args: '99d'),
        containerTemplate(name: 'golang', image: 'golang:1.16.5', command: 'sleep', args: '99d')
]) {

        node(label) {

                stage('Get a Maven project') {

                        git 'https://github.com/jenkinsci/kubernetes-plugin.git'
                        steps
                                {
                                        container('maven') {
                                                stage('Build a Maven project') {

                                                        sh 'mvn -B -ntp clean install'

                                                }
                                        }
                                }
                }
        }

}
/*
podTemplate(label: label,
        containers: [
                containerTemplate(name: 'build', image: 'maven:3.3.9-jdk-8-alpine', ttyEnabled: true, alwaysPullImage: true, privileged: true)
        ],
        volumes: [hostPathVolume(hostPath: '/root/.m2', mountPath: '/root/.m2')]
) {
        node(label) { // node start
                container('build') {
                        stage('checkout') {
                                sh 'echo hello world'
                        }
                }
        }
}*/

